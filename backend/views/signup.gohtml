{{define "title"}}
Suntimes App - Signup
{{end}}

{{define "style"}}
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f9f9f9;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
    }

    .container {
        max-width: 400px;
        width: 90%;
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    h1,
    h2 {
        text-align: center;
    }

    form {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .input {
        border: 1px solid #ddd;
        padding: 10px;
        border-radius: 5px;
        font-size: 16px;
    }

    .button {
        background-color: #007AFF;
        color: white;
        padding: 15px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
    }

    .button:hover {
        background-color: #005ecb;
    }

    #form-error {
        color: red;
        text-align: center;
        margin-top: 10px;
    }

    @media (min-width: 768px) {
        .container {
            max-width: 500px;
        }
    }

    @media (min-width: 1024px) {
        .container {
            max-width: 600px;
        }
    }
</style>
{{end}}

{{define "body"}}
<div class="container">
    <h1>Suntimes App</h1>
    {{if and .inviteeEmail .inviteeEmail}}
    <h2>Signup with invite token</h2>
    <p>Hello {{.inviteeEmail}}!</p>
    <p>You have been invited by {{.inviteeEmail}} to share a calendar with them!</p>
    {{end}}

    <p>Signup here to Suntimes Calendar and download the app for iOS or Android afterwards.</p>

    <form id="signup-form">
        <input class="input" type="text" id="email" name="email" placeholder="Email" required>
        <input class="input" type="text" id="name" name="name" placeholder="Name (optional)" autocomplete="username">
        <input class="input" type="password" id="password" name="password" placeholder="Password"
            autocomplete="new-password" required>
        <input class="input" type="password" id="passwordConfirm" name="passwordConfirm" placeholder="Confirm password"
            autocomplete="new-password" required>
        <button class="button" type="submit">Sign Up</button>
        <p id="form-error"></p>
    </form>
</div>

<script type="module">
    // invite token is rendered on the server, may be empty string if no `token` query param was present in the request
    const inviteToken = '{{.inviteToken | printf "%q"}}';
    const MIN_PASSWORD_CHARS = 8;
    const USERS_ENDPOINT = "/api/collections/users/records";
    const form = document.getElementById("signup-form");
    form.addEventListener("submit", onSubmit);

    async function onSubmit(event) {
        event.preventDefault();
        const formData = new FormData(event.target);
        const password = formData.get("password");
        const passwordConfirm = formData.get("passwordConfirm");
        const errorElement = document.getElementById("form-error");

        if (password !== passwordConfirm) {
            errorElement.innerText = "Passwords do not match!";
            return;
        }

        if (password.length < MIN_PASSWORD_CHARS) {
            errorElement.innerText = "Password must be at least 8 characters long.";
            return;
        }


        try {
            const tokenQueryParam = inviteToken ? `?${new URLSearchParams({ token: inviteToken })}` : "";

            const response = await fetch(USERS_ENDPOINT + tokenQueryParam, {
                method: "POST",
                body: formData, // Content-Type is set automatically
            });

            if (!response.ok) {
                throw new Error(await response.text());
            }

            console.log("Signup successful!");
        } catch (err) {
            console.error("Error submitting:", err);
            document.getElementById("form-error").innerText = "Signup failed.";
        }
    }
</script>
{{end}}